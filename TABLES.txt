--Inspect data, it is better to do it separately
select 
  distinct status, 
  year_id, 
  product_line, 
  country, 
  deal_size, 
  territory, 
  month_id 
from 
  sales ---ANALYSIS
  ----What was the best month for sales in a specific year? How much was earned that month?
select 
  month_id, 
  count(order_number) frequency, 
  sum(sales) revenue 
from 
  sales 
where 
  year_id = 2003 --> inspect for year 2003 first
group by 
  month_id 
order by 
  3 desc --> November 
select 
  month_id, 
  count(order_number) frequency, 
  sum(sales) revenue 
from 
  sales 
where 
  year_id = 2004 
group by 
  month_id 
order by 
  3 desc --> November
  ----Who is our best customer (this could be best answered with RFM)
  with rfm as (
    select 
      customername, 
      sum(sales) MonetaryValue, 
      round(
        avg(sales), 
        2
      ) AVGMonetaryValue, 
      count(order_number) frequency, 
      max(order_date) latest_order_date, 
      (
        select 
          max(order_date) 
        from 
          sales
      ) max_order_date, 
      DATE_PART(
        'day', 
        (
          select 
            max(order_date) 
          from 
            sales
        ):: timestamp - max(order_date):: timestamp
      ) recency 
    from 
      sales 
    group by 
      customername
  ), 
  rfm_calc as (
    select 
      *, 
      ntile(4) over (
        order by 
          recency desc
      ) rfm_recency, 
      ntile(4) over (
        order by 
          frequency
      ) rfm_frequency, 
      ntile(4) over (
        order by 
          AVGMonetaryValue
      ) rfm_monetary 
    from 
      rfm
  ) 
select 
  c.*, 
  rfm_recency + rfm_frequency + rfm_monetary as rfm_cell
  into rfm1
from rfm_calc c;
 
---Categorize customer
select 
  customername, 
  rfm_recency, 
  rfm_frequency, 
  rfm_monetary, 
  case when rfm_cell > 9 then 'high value' when rfm_cell > 6 
  and rfm_cell <= 9 then 'loyal' when rfm_cell > 3 
  and rfm_cell <= 6 then 'high potential' else 'low' end as rfm_segment 
from 
  rfm1 ---what product most often sales together 
select 
  order_number, 
  string_agg(product_code, ',') 
from 
  sales 
where 
  order_number in (
    select 
      order_number co 
    from 
      sales 
    where 
      status = 'Shipped' 
    group by 
      order_number 
    having 
      count(*) = 3 )-- change number to see the rest
    group by 
      order_number
